<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPhoneNumber" xml:space="preserve">
    <value>Add a phone number</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="ChangeAccountSettings" xml:space="preserve">
    <value>Change your account settings</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Créer</value>
  </data>
  <data name="CreateLogin" xml:space="preserve">
    <value>Create login</value>
  </data>
  <data name="CreatePassword" xml:space="preserve">
    <value>Create password</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello </value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="LockedOut" xml:space="preserve">
    <value>Locked out</value>
  </data>
  <data name="LockOutMessage" xml:space="preserve">
    <value>This account has been locked out, please try again later</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Logoff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="Manage" xml:space="preserve">
    <value>Manage</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RequestError" xml:space="preserve">
    <value>An error occurred while processing your request</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select Language</value>
  </data>
  <data name="SetPasswordText" xml:space="preserve">
    <value>You do not have a local username/password for this site. Add a local
    account so you can log in without an external login.</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Bloggy</value>
  </data>
  <data name="VerifyPhoneNumber" xml:space="preserve">
    <value>Verify phone number</value>
  </data>
  <data name="Banner" xml:space="preserve">
    <value>Banner</value>
  </data>
  <data name="CreatePost" xml:space="preserve">
    <value>Create new post</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoPost" xml:space="preserve">
    <value>No post yet. Perhaps you should create the first one ;)</value>
  </data>
  <data name="Posts" xml:space="preserve">
    <value>Posts</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="AddArticle" xml:space="preserve">
    <value>Add a new article</value>
  </data>
  <data name="AddElement" xml:space="preserve">
    <value>Add a new element</value>
  </data>
  <data name="AddLanguage" xml:space="preserve">
    <value>Add a new language</value>
  </data>
  <data name="AdministrationPanel" xml:space="preserve">
    <value>Administration panel</value>
  </data>
  <data name="Article" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="AssociationForm" xml:space="preserve">
    <value>Association form</value>
  </data>
  <data name="BackToHome" xml:space="preserve">
    <value>Back to home</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="ConfirmEmail" xml:space="preserve">
    <value>Confirm email</value>
  </data>
  <data name="DeletionCertain" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="EditArticle" xml:space="preserve">
    <value>Edit article</value>
  </data>
  <data name="EditUser" xml:space="preserve">
    <value>Edit user</value>
  </data>
  <data name="Element" xml:space="preserve">
    <value>Element</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="ForgotPasswordConfirmation" xml:space="preserve">
    <value>Forgot password confirmation</value>
  </data>
  <data name="ForgotPasswordQuestion" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="LanguageCode" xml:space="preserve">
    <value>Language code</value>
  </data>
  <data name="LanguageList" xml:space="preserve">
    <value>Language list</value>
  </data>
  <data name="LanguageName" xml:space="preserve">
    <value>Language name</value>
  </data>
  <data name="LoginFailure" xml:space="preserve">
    <value>Login failure</value>
  </data>
  <data name="NoArticle" xml:space="preserve">
    <value>No article yet</value>
  </data>
  <data name="NoElement" xml:space="preserve">
    <value>No element yet</value>
  </data>
  <data name="NoLanguage" xml:space="preserve">
    <value>No language available</value>
  </data>
  <data name="Paragraph" xml:space="preserve">
    <value>Paragraph</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="Read" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="RegisterNewUser" xml:space="preserve">
    <value>Registera new user</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="ResetPasswordConfirmation" xml:space="preserve">
    <value>Reset password confirmation</value>
  </data>
  <data name="SearchArticles" xml:space="preserve">
    <value>Search articles</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UserRole" xml:space="preserve">
    <value>User role</value>
  </data>
  <data name="UserRoleManagement" xml:space="preserve">
    <value>User role management</value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>Verify</value>
  </data>
</root>